version: '3.5'

services:
  neofelis-server:
    image: "neofelis-server:1.16"
    container_name: "neofelis-server"
    env_file: ./.env
    restart: always
    environment:
      - TZ=${TZ_REGION}
    depends_on:
      - timescale
      - hasura
      - redis
    expose:
      - 80
    ports:
      - "9000:80"
    labels:
      - traefik.enable=true
      - traefik.http.routers.neofelis-server.entrypoints=web
      - traefik.http.routers.neofelis-server.rule=PathPrefix(`/neofelis-server`)
      - traefik.http.services.neofelis-server.loadbalancer.server.port=80

  pgadmin:
    container_name: neofelis-pgadmin
    image: dpage/pgadmin4
    restart: always
    volumes:
      - pgadmin:/var/lib/pgadmin
    expose:
      - 80
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pgadmin.entrypoints=web"
      - "traefik.http.routers.pgadmin.rule=PathPrefix(`/pgadmin`)"
      - "traefik.http.services.pgadmin.loadbalancer.server.port=80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      SCRIPT_NAME: /pgadmin

  timescale:
    image: timescale/timescaledb:latest-pg15
    container_name: neofelis-timescale
    shm_size: 1gb
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /var/lib/postgresql/data
    volumes:
      - dbdata:/var/lib/postgresql/data

  hasura:
    container_name: neofelis-backend
    restart: always
    depends_on:
      - timescale
    build:
      context: ./hasura
    env_file: ./hasura/.env
    ports:
      - 9080:8080
    labels:
      - traefik.enable=false

  portainer:
    container_name: neofelis-portainer
    image: portainer/portainer-ce:latest
    command: -H unix:///var/run/docker.sock
    restart: always
    ports:
      - 9443:9443
    security_opt:
      - no-new-privileges:true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    labels:
      traefik.enable: false
      #traefik.port: 9443
      #traefik.docker.network: traefik_external
      #traefik.http.routers.portainer.rule: PathPrefix(`/portainer/`)
      #traefik.http.routers.portainer.entrypoints: websecure
      #traefik.http.routers.portainer.service: portainer
      #traefik.http.services.portainer.loadbalancer.server.port: 9443

  redis:
    container_name: neofelis-redis
    image: "redis:latest"
    command: redis-server --requirepass ${REDIS_PASS:-fiQYfvMSGww}
    restart: always
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data
      - redis-conf:/usr/local/etc/redis/redis.conf

  grafana:
    image: grafana/grafana
    container_name: neofelis-grafana
    restart: always
    networks:
      - monitor-net
      - default
    depends_on:
      - timescale
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
      - GF_DATABASE_NAME=${GF_DATABASE_NAME}
      - GF_DATABASE_USER=${GF_DATABASE_USER}
      - GF_DATABASE_PASSWORD=${GF_DATABASE_PASSWORD}
      - GF_DATABASE_MAX_OPEN_CONN=300
      - GF_DATABASE_TYPE=${GF_DATABASE_TYPE}
      - GF_DATABASE_HOST=${GF_DATABASE_HOST}
      - GF_DATABASE_SSL_MODE=disable
      - GF_SESSION_PROVIDER=${GF_SESSION_PROVIDER}
      - GF_SESSION_PROVIDER_CONFIG=${GF_SESSION_PROVIDER_CONFIG}
      - GF_SERVER_ROUTER_LOGGING=false
      - GF_LOG_CONSOLE_FORMAT=json
      - GF_LOG_FILTERS=alerting.notifier:debug,alerting.notifier.slack:debug,auth:debug
      - GF_AUTH_TOKEN_ROTATION_INTERVAL_MINUTES=10
      - GF_PLUGINS_ENABLE_ALPHA=true
    labels:
      org.label-schema.group: "monitoring"

  minio:
    image: minio/minio:latest
    container_name: neofelis-minio
    ports:
      - 9002:9000
      - 9092:9092
    restart: always
    environment:
      TZ: TIMEZONE=${TZ_REGION}
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
      MINIO_PROMETHEUS_AUTH_TYPE: PUBLIC
    volumes:
      - minio-data:/data
    command: server /data --console-address ":9092"

volumes:
  redis-data:
  redis-conf:
  minio-data:
  grafana_data: {}
  pgadmin:
    name: pgadmin_data
  portainer_data:
    external: true
  dbdata:
    name: timescale_data
    external: true

networks:
  default:
    name: traefik_external
    external: true
  monitor-net:
    driver: bridge
